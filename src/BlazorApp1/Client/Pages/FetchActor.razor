@page "/fetchactor"
@using BlazorApp1.Shared
@using BlazorApp1.Client.Store.WeatherUseCase
@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@inject HttpClient Http

<h1>Weather forecast</h1>
<div class="container-fluid p-0 m-0 my-2">
    <div class="row p-0 m-0">
        <div class="col-auto me-auto p-0 m-0 my-1">
            <div class="input-group">
              <input type="text" class="form-control" placeholder="Search" title="Enter search keyword">
              <HxButton Icon="BootstrapIcon.Search" Outline=true Color="ThemeColor.Secondary" />
            </div>
        </div>
        <div class="col-auto p-0 m-0 my-1">
            <HxButton Icon="BootstrapIcon.PlusLg" CssClass="rp1" Color="ThemeColor.Primary">추가</HxButton>
            <HxButton Icon="BootstrapIcon.Pencil" Color="ThemeColor.Success">편집</HxButton>
            <HxButton Icon="BootstrapIcon.Trash" @onclick="ShowDeleteModal" Enabled="@(WeatherState.Value.CheckedIds.Any())" Color="ThemeColor.Danger">삭제</HxButton>
        </div>
    </div>
</div>
@if (WeatherState.Value.IsLoading)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-bordered table-hover">
        <thead class="table-light">
            <tr>
                <th class="" scope="col">
                    <input class="form-check-input"
                           type="checkbox"
                           checked="@(WeatherState.Value.CheckedIds.Count() == WeatherState.Value.Forecasts.Count())"
                           @onchange="e => CheckAll()" />
                </th>
                <th scope="col">법인</th>
                <th scope="col">부서</th>
                <th scope="col">이름</th>
                <th scope="col">이메일</th>
                <th scope="col">사용목적</th>
                <th scope="col">사용기간</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in WeatherState.Value.TableView())
            {
                <tr>
                    <th scope="row">
                        <input class="form-check-input"
                               type="checkbox"
                               checked="@item.Checked"
                               @onchange="e => Check(e, item.Dto.Id)" />
                    </th>
                    <td>@item.Dto.Date.ToShortDateString()</td>
                    <td>@item.Dto.TemperatureC</td>
                    <td>@item.Dto.TemperatureF</td>
                    <td>@item.Dto.Summary</td>
                </tr>
            }
        </tbody>
    </table>
    <div class="d-flex justify-content-between">
        <HxDropdown>
                <HxDropdownToggleButton Color="ThemeColor.Primary" Outline="true">10개씩 보기</HxDropdownToggleButton>
	            <HxDropdownMenu>
		            <HxDropdownItem >10개씩 보기</HxDropdownItem>
		            <HxDropdownItem >30개씩 보기 </HxDropdownItem>
                    <HxDropdownItem >50개씩 보기 </HxDropdownItem>
	            </HxDropdownMenu>
        </HxDropdown>
        <HxPager DisplayNumberCount=5
                 CurrentPageIndex=0
                 TotalPages=50 />
    </div>
}



